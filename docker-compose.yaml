
services:

  server:
    build: ./Docker/apache
    container_name: bauru_jobs_apache_container
    restart: "no"
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./:/var/www/html/project
      - ./Docker/apache/config/default_symfony.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./Docker/apache/config/default-ssl.conf:/etc/apache2/sites-enabled/default-ssl.conf
    depends_on:
      - php
      - database

  php:
    build: ./Docker/php/
    container_name: bauru_jobs_php_container
    user: razielrodrigues:razielrodrigues 
    restart: "no"
    volumes:
      -  ./:/var/www/html/project
      - ./Docker/php/config/custom.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./Docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini

  node:
    build: ./Docker/node/
    container_name: bauru_jobs_node_container
    restart: "no"
    volumes:
      - ./:/var/www/html/project
    
  database:
    image: mariadb:10.5.22
    hostname: docker-mariadb #needed for connection from php-pdo
    container_name: bauru_jobs_mariadb_container
    restart: "no"
    ports:
      - "3306:3306"
    env_file:
      - ./Docker/.env
    volumes:
      - database_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  mail:
    image: mailhog/mailhog:latest
    container_name: bauru_jobs_mail
    restart: "no"
    ports:
      - 1025:1025
      - 8025:8025

  # mercure:
  #   image: dunglas/mercure
  #   restart: unless-stopped
  #   environment:
  #     # Uncomment the following line to disable HTTPS,
  #     SERVER_NAME: ':80'
  #     MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
  #     MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
  #     # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
  #     MERCURE_EXTRA_DIRECTIVES: |
  #       cors_origins http://127.0.0.1:8000
  #   # Comment the following line to disable the development mode
  #   command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "https://localhost/healthz"]
  #     timeout: 5s
  #     retries: 5
  #     start_period: 60s
  #   ports:
  #     - "80"
  #   volumes:
  #     - mercure_data:/data
  #     - mercure_config:/config

volumes:
  database_data:
  mercure_data:
  mercure_config: